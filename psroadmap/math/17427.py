"""
f(A) = 자연수 A의 모든 약수의 합
g(x) = x보다 작거나 같은 모든 자연수 y의 f(y)를 더한 값.
-> g(5) = f(5) + f(4) + ... + f(1)

12의 약수 = 1 2 3 4 6 12
1 ~ 12 중에 12를 배수로 가지는 수
배수로 가진다? 12 % x == 0을 만족하는 수

g(10) = [
    1
    1 2
    1 3
    1 2 4
    1 5
    1 2 3 6
    1 7
    1 2 4 8
    1 3 9
    1 2 5 10
]

위 숫자 배열에서
1의 개수 = 10 이하의 자연수 n에 대하여 1이 n의 약수인 n 개수
2의 개수 = 10 이하의 자연수 n에 대하여 2가 n의 약수인 n 개수
...
10의 개수 = 10 이하의 자연수 n에 대하여 10이 n의 약수인 n 개수

i의 개수 = n 이하의 수 k에 대하여 i가 k의 약수라는 조건을 만족하는 k의 개수
i가 k의 약수이다 -> k는 i의 배수이다
따라서, n 이하의 수 k에 대하여 i가 k의 약수라는 조건을 만족하는 k의 개수
= n 이하의 수 k에 대하여 k가 i의 배수임을 만족하는 수
= n 이하의 수 중 i의 배수인 수
= n/i

g(n) = n/1 + n/2 + n/3 + ... + n/n
g(n+1) = n+1/1 + n+1/2 + n+1/3 + ... + n+1


result = 0
for i in 1 ~ k:
    result += i * (k/i)
"""
import sys
input = sys.stdin.readline
result = 0

number = int(input())
for i in range(1, number+1):
    result += (number // i) * i
print(result)